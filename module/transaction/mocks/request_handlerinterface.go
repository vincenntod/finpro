// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// RequestHandlerinterface is an autogenerated mock type for the RequestHandlerinterface type
type RequestHandlerinterface struct {
	mock.Mock
}

type RequestHandlerinterface_Expecter struct {
	mock *mock.Mock
}

func (_m *RequestHandlerinterface) EXPECT() *RequestHandlerinterface_Expecter {
	return &RequestHandlerinterface_Expecter{mock: &_m.Mock}
}

// GetAllTransactionByRequestLimit provides a mock function with given fields: c
func (_m *RequestHandlerinterface) GetAllTransactionByRequestLimit(c *gin.Context) {
	_m.Called(c)
}

// RequestHandlerinterface_GetAllTransactionByRequestLimit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAllTransactionByRequestLimit'
type RequestHandlerinterface_GetAllTransactionByRequestLimit_Call struct {
	*mock.Call
}

// GetAllTransactionByRequestLimit is a helper method to define mock.On call
//   - c *gin.Context
func (_e *RequestHandlerinterface_Expecter) GetAllTransactionByRequestLimit(c interface{}) *RequestHandlerinterface_GetAllTransactionByRequestLimit_Call {
	return &RequestHandlerinterface_GetAllTransactionByRequestLimit_Call{Call: _e.mock.On("GetAllTransactionByRequestLimit", c)}
}

func (_c *RequestHandlerinterface_GetAllTransactionByRequestLimit_Call) Run(run func(c *gin.Context)) *RequestHandlerinterface_GetAllTransactionByRequestLimit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *RequestHandlerinterface_GetAllTransactionByRequestLimit_Call) Return() *RequestHandlerinterface_GetAllTransactionByRequestLimit_Call {
	_c.Call.Return()
	return _c
}

func (_c *RequestHandlerinterface_GetAllTransactionByRequestLimit_Call) RunAndReturn(run func(*gin.Context)) *RequestHandlerinterface_GetAllTransactionByRequestLimit_Call {
	_c.Call.Return(run)
	return _c
}

// NewRequestHandlerinterface creates a new instance of RequestHandlerinterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRequestHandlerinterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *RequestHandlerinterface {
	mock := &RequestHandlerinterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
