// Code generated by mockery v2.30.1. DO NOT EDIT.

package transaction

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// MockRequestHandlerinterface is an autogenerated mock type for the RequestHandlerinterface type
type MockRequestHandlerinterface struct {
	mock.Mock
}

type MockRequestHandlerinterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRequestHandlerinterface) EXPECT() *MockRequestHandlerinterface_Expecter {
	return &MockRequestHandlerinterface_Expecter{mock: &_m.Mock}
}

// GetAllTransaction provides a mock function with given fields: c
func (_m *MockRequestHandlerinterface) GetAllTransaction(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerinterface_GetAllTransaction_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAllTransaction'
type MockRequestHandlerinterface_GetAllTransaction_Call struct {
	*mock.Call
}

// GetAllTransaction is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerinterface_Expecter) GetAllTransaction(c interface{}) *MockRequestHandlerinterface_GetAllTransaction_Call {
	return &MockRequestHandlerinterface_GetAllTransaction_Call{Call: _e.mock.On("GetAllTransaction", c)}
}

func (_c *MockRequestHandlerinterface_GetAllTransaction_Call) Run(run func(c *gin.Context)) *MockRequestHandlerinterface_GetAllTransaction_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerinterface_GetAllTransaction_Call) Return() *MockRequestHandlerinterface_GetAllTransaction_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerinterface_GetAllTransaction_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerinterface_GetAllTransaction_Call {
	_c.Call.Return(run)
	return _c
}

// GetAllTransactionByDate provides a mock function with given fields: c
func (_m *MockRequestHandlerinterface) GetAllTransactionByDate(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerinterface_GetAllTransactionByDate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAllTransactionByDate'
type MockRequestHandlerinterface_GetAllTransactionByDate_Call struct {
	*mock.Call
}

// GetAllTransactionByDate is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerinterface_Expecter) GetAllTransactionByDate(c interface{}) *MockRequestHandlerinterface_GetAllTransactionByDate_Call {
	return &MockRequestHandlerinterface_GetAllTransactionByDate_Call{Call: _e.mock.On("GetAllTransactionByDate", c)}
}

func (_c *MockRequestHandlerinterface_GetAllTransactionByDate_Call) Run(run func(c *gin.Context)) *MockRequestHandlerinterface_GetAllTransactionByDate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerinterface_GetAllTransactionByDate_Call) Return() *MockRequestHandlerinterface_GetAllTransactionByDate_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerinterface_GetAllTransactionByDate_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerinterface_GetAllTransactionByDate_Call {
	_c.Call.Return(run)
	return _c
}

// GetAllTransactionByStatus provides a mock function with given fields: c
func (_m *MockRequestHandlerinterface) GetAllTransactionByStatus(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerinterface_GetAllTransactionByStatus_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAllTransactionByStatus'
type MockRequestHandlerinterface_GetAllTransactionByStatus_Call struct {
	*mock.Call
}

// GetAllTransactionByStatus is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerinterface_Expecter) GetAllTransactionByStatus(c interface{}) *MockRequestHandlerinterface_GetAllTransactionByStatus_Call {
	return &MockRequestHandlerinterface_GetAllTransactionByStatus_Call{Call: _e.mock.On("GetAllTransactionByStatus", c)}
}

func (_c *MockRequestHandlerinterface_GetAllTransactionByStatus_Call) Run(run func(c *gin.Context)) *MockRequestHandlerinterface_GetAllTransactionByStatus_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerinterface_GetAllTransactionByStatus_Call) Return() *MockRequestHandlerinterface_GetAllTransactionByStatus_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerinterface_GetAllTransactionByStatus_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerinterface_GetAllTransactionByStatus_Call {
	_c.Call.Return(run)
	return _c
}

// GetAllTransactionByStatusDate provides a mock function with given fields: c
func (_m *MockRequestHandlerinterface) GetAllTransactionByStatusDate(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAllTransactionByStatusDate'
type MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call struct {
	*mock.Call
}

// GetAllTransactionByStatusDate is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerinterface_Expecter) GetAllTransactionByStatusDate(c interface{}) *MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call {
	return &MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call{Call: _e.mock.On("GetAllTransactionByStatusDate", c)}
}

func (_c *MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call) Run(run func(c *gin.Context)) *MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call) Return() *MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerinterface_GetAllTransactionByStatusDate_Call {
	_c.Call.Return(run)
	return _c
}

// GetTransaction provides a mock function with given fields: c
func (_m *MockRequestHandlerinterface) GetTransaction(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerinterface_GetTransaction_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetTransaction'
type MockRequestHandlerinterface_GetTransaction_Call struct {
	*mock.Call
}

// GetTransaction is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerinterface_Expecter) GetTransaction(c interface{}) *MockRequestHandlerinterface_GetTransaction_Call {
	return &MockRequestHandlerinterface_GetTransaction_Call{Call: _e.mock.On("GetTransaction", c)}
}

func (_c *MockRequestHandlerinterface_GetTransaction_Call) Run(run func(c *gin.Context)) *MockRequestHandlerinterface_GetTransaction_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerinterface_GetTransaction_Call) Return() *MockRequestHandlerinterface_GetTransaction_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerinterface_GetTransaction_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerinterface_GetTransaction_Call {
	_c.Call.Return(run)
	return _c
}

// GetTransactionByDate provides a mock function with given fields: c
func (_m *MockRequestHandlerinterface) GetTransactionByDate(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerinterface_GetTransactionByDate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetTransactionByDate'
type MockRequestHandlerinterface_GetTransactionByDate_Call struct {
	*mock.Call
}

// GetTransactionByDate is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerinterface_Expecter) GetTransactionByDate(c interface{}) *MockRequestHandlerinterface_GetTransactionByDate_Call {
	return &MockRequestHandlerinterface_GetTransactionByDate_Call{Call: _e.mock.On("GetTransactionByDate", c)}
}

func (_c *MockRequestHandlerinterface_GetTransactionByDate_Call) Run(run func(c *gin.Context)) *MockRequestHandlerinterface_GetTransactionByDate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerinterface_GetTransactionByDate_Call) Return() *MockRequestHandlerinterface_GetTransactionByDate_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerinterface_GetTransactionByDate_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerinterface_GetTransactionByDate_Call {
	_c.Call.Return(run)
	return _c
}

// GetTransactionByStatusAndDate provides a mock function with given fields: c
func (_m *MockRequestHandlerinterface) GetTransactionByStatusAndDate(c *gin.Context) {
	_m.Called(c)
}

// MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetTransactionByStatusAndDate'
type MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call struct {
	*mock.Call
}

// GetTransactionByStatusAndDate is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockRequestHandlerinterface_Expecter) GetTransactionByStatusAndDate(c interface{}) *MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call {
	return &MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call{Call: _e.mock.On("GetTransactionByStatusAndDate", c)}
}

func (_c *MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call) Run(run func(c *gin.Context)) *MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call) Return() *MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call) RunAndReturn(run func(*gin.Context)) *MockRequestHandlerinterface_GetTransactionByStatusAndDate_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRequestHandlerinterface creates a new instance of MockRequestHandlerinterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRequestHandlerinterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRequestHandlerinterface {
	mock := &MockRequestHandlerinterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
